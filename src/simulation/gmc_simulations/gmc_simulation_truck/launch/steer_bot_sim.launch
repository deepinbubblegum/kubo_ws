<?xml version="1.0"?>
<launch>

    <arg name="model" default="$(find gmc_simulation_truck)/urdf/steer_bot.urdf.xacro"/>
    <arg name="namespace" default="/steer_bot" />
    <arg name="world_name" default="worlds/empty_world" />
    <arg name="cmd_timeout" default="0.5"/>
    <arg name="x" default="0.0"/>
    <arg name="y" default="0.0"/>
    <arg name="z" default="1.0" />
    <arg name="roll" default="0.0"/>
    <arg name="pitch" default="0.0"/>
    <arg name="yaw" default="0.0"/>

    <group ns="$(arg namespace)">

        <!-- Gazebo  -->
        <include file="$(find gazebo_ros)/launch/empty_world.launch">
            <arg name="world_name" default="$(arg world_name)"/>
        </include>

        <!-- Load the robot description -->
        <param name="robot_description" command="$(find xacro)/xacro $(arg model)"/>

        <!-- Load ros_controllers configuration parameters -->
        <rosparam file="$(find steer_bot_control)/config/ctrl_ackermann_steering_controller.yaml" command="load" ns="$(arg namespace)" />
        <rosparam file="$(find steer_bot_control)/config/ctrl_gains.yaml" command="load" ns="$(arg namespace)" />
        <rosparam file="$(find steer_bot_control)/config/ctrl_joint_state_publisher.yaml" command="load" ns="$(arg namespace)" />
        <rosparam file="$(find steer_bot_control)/config/ctrl_steer_bot_hardware_gazebo.yaml" command="load" ns="$(arg namespace)" />

        <!-- Spawn the controllers -->
        <node pkg="controller_manager" type="spawner" name="controller_spawner" ns="$(arg namespace)"
            args="joint_state_publisher ackermann_steering_controller"
            output="screen" respawn="false" />

        <!-- Launch  the robot state publisher -->
        <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher">
            <param name="publish_frequency" value="50.0"/>
        </node>

        <!-- Launch a rqt steering GUI for publishing to /steer_bot/steer_drive_controller/cmd_vel -->
        <node pkg="rqt_robot_steering" type="rqt_robot_steering" name="rqt_robot_steering" >
            <param name="default_topic" value="$(arg namespace)/ackermann_steering_controller/cmd_vel"/>
        </node>

        <!-- Spawn robot in Gazebo -->
        <node name="spawn_vehicle" pkg="gazebo_ros" type="spawn_model"
            args="-urdf -param robot_description -model steer_bot
                -gazebo_namespace /$(arg namespace)/gazebo
                -x $(arg x) -y $(arg y) -z $(arg z)
                -R $(arg roll) -P $(arg pitch) -Y $(arg yaw)"
            respawn="false" output="screen" />

    </group>
    <node pkg="tf" type="static_transform_publisher" name="base_link_merged_point_broadcaster" args="0 0 1 0 0 0 1 base_link merged_point 1000" />
    <node pkg="tf" type="static_transform_publisher" name="base_link_laser_broadcaster" args="0 0 1 0 0 0 1 base_link laser 1000" />

    <!-- node rslidar filter -->
    <include file="$(find ray_filter_ground)/launch/rslidar_front.launch"/>
    <include file="$(find ray_filter_ground)/launch/rslidar_back.launch"/>

    <!-- point 2 laser -->
    <include file="$(find point_preprocess)/launch/point_preprocess.launch"/>

    <!-- merger laser -->
    <include file="$(find ira_laser_tools)/launch/laserscan_multi_merger.launch"/>

    <!-- rf2o front scan -->
    <!-- <include file="$(find rf2o_laser_odometry)/launch/rf2o_laser_odometry.launch"/> -->


    <!--launch rviz-->
    <node name="rviz" pkg="rviz" type="rviz" respawn="false" args="-d $(find gmc_simulation_truck)/rviz/gmc_simulation_truck.rviz"/>
</launch>